xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ImageView
        android:id="@+id/imageView"
        android:src="@drawable/ic_launcher_foreground"   <!-- Example image -->
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:layout_centerInParent="true" />

    <Button
        android:id="@+id/startButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Start"
        android:layout_alignParentBottom="true"
        android:layout_alignParentStart="true"
        android:layout_margin="20dp" />

    <Button
        android:id="@+id/stopButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Stop"
        android:layout_alignParentBottom="true"
        android:layout_alignParentEnd="true"
        android:layout_margin="20dp" />

</RelativeLayout>

java


package com.example.animationexample;

import android.animation.ObjectAnimator;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private ImageView imageView;
    private ObjectAnimator moveLeftAnimator, moveRightAnimator, moveUpAnimator, moveDownAnimator;
    private ObjectAnimator currentAnimator;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        imageView = findViewById(R.id.imageView);
        Button startButton = findViewById(R.id.startButton);
        Button stopButton = findViewById(R.id.stopButton);

        // Create ObjectAnimators for different movements
        moveLeftAnimator = ObjectAnimator.ofFloat(imageView, "translationX", -500f);
        moveRightAnimator = ObjectAnimator.ofFloat(imageView, "translationX", 500f);
        moveUpAnimator = ObjectAnimator.ofFloat(imageView, "translationY", -500f);
        moveDownAnimator = ObjectAnimator.ofFloat(imageView, "translationY", 500f);

        // Button listeners
        startButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startAnimation();
            }
        });

        stopButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                stopAnimation();
            }
        });
    }

    // Start animation with different directions (left, right, up, down)
    private void startAnimation() {
        if (currentAnimator != null && currentAnimator.isRunning()) {
            currentAnimator.cancel(); // Stop any ongoing animation
        }

        // Choose the direction for movement (left, right, up, down)
        currentAnimator = moveRightAnimator; // Example: Moving right
        currentAnimator.setDuration(1000); // 1 second duration
        currentAnimator.start();
    }

    // Stop the current animation
    private void stopAnimation() {
        if (currentAnimator != null && currentAnimator.isRunning()) {
            currentAnimator.cancel();
        }
    }
}
